// ContentView.swift - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ NavigationKit
import SwiftUI
import NavigationKit

struct ContentView: View {
    @EnvironmentObject var navigationManager: NavigationManager
    
    var body: some View {
        // 1Ô∏è‚É£ NavigationContainer - –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å—Ç–µ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
        NavigationContainer(
            navigationManager: navigationManager,
            rootView: { MainContent() },
            destinationBuilder: { (screen: AppScreen) in screen.body }
        )
        // 2Ô∏è‚É£ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
        .withNavigationModals(
            navigationManager: navigationManager,
            sheetContent: { (screen: ModalScreen) in screen.body },
            fullScreenCoverContent: { (screen: ModalScreen) in screen.body }
        )
    }
}

// 3Ô∏è‚É£ –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π —Ä–∞–∑–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
struct MainContent: View {
    @EnvironmentObject var navigationManager: NavigationManager
    
    var body: some View {
        VStack(spacing: 20) {
            Text("NavigationKit Demo")
                .font(.largeTitle)
                .fontWeight(.bold)
                .padding(.bottom, 30)
            
            // 4Ô∏è‚É£ –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π NavigationKit
            VStack(spacing: 16) {
                // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è push-–Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                NavigationDemoButton(
                    title: "Go to Details",
                    color: .blue
                ) {
                    navigationManager.navigate(to: AppScreen.details(id: 42))
                }
                
                // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –ø–µ—Ä–µ–¥–∞—á–µ–π —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                NavigationDemoButton(
                    title: "Go to Profile",
                    color: .indigo
                ) {
                    navigationManager.navigate(to: AppScreen.profile(name: "John Doe"))
                }
                
                // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ sheet-–æ–∫–Ω–∞
                NavigationDemoButton(
                    title: "Show Settings Sheet",
                    color: .green
                ) {
                    navigationManager.presentSheet(ModalScreen.settings)
                }
                
                // –ü–æ–∫–∞–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                NavigationDemoButton(
                    title: "Show Full Screen",
                    color: .orange
                ) {
                    navigationManager.presentFullScreenCover(ModalScreen.settings)
                }
            }
            .padding(.horizontal)
        }
        .padding()
        .navigationTitle("NavigationKit")
        .navigationBarTitleDisplayMode(.inline)
    }
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
struct NavigationDemoButton: View {
    let title: String
    let color: Color
    let action: () -> Void
    
    var body: some View {
        Button(action: action) {
            Text(title)
                .font(.headline)
                .frame(maxWidth: .infinity)
                .padding(.vertical, 14)
                .foregroundColor(.white)
                .background(color)
                .cornerRadius(10)
                .shadow(color: color.opacity(0.3), radius: 3, x: 0, y: 2)
        }
    }
}

// 5Ô∏è‚É£ –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —ç–∫—Ä–∞–Ω–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ enum
enum AppScreen: Screen, Hashable {
    case main
    case details(id: Int)
    case profile(name: String)
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–µ–π—Å–∞
    var body: some View {
        switch self {
        case .main:
            Text("Main Screen")
        case .details(let value):
            DetailsView(id: value)
        case .profile(let name):
            ProfileView(name: name)
        }
    }
}

// 6Ô∏è‚É£ –û—Ç–¥–µ–ª—å–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
enum ModalScreen: Screen, Hashable, Identifiable {
    case settings
    case info(message: String)
    
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è Identifiable –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤
    var id: String {
        switch self {
        case .settings:
            return "settings"
        case .info(let message):
            return "info-\(message)"
        }
    }
    
    var body: some View {
        switch self {
        case .settings:
            SettingsView()
        case .info(let message):
            InfoView(message: message)
        }
    }
}

// 7Ô∏è‚É£ –î–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –Ω–∞–∑–∞–¥ –∏ –≤—ã–∑–æ–≤–æ–º –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
struct DetailsView: View {
    @EnvironmentObject var navigationManager: NavigationManager
    let id: Int
    
    var body: some View {
        VStack(spacing: 20) {
            Text("Details Screen \(id)")
                .font(.largeTitle)
                .fontWeight(.bold)
                .padding(.bottom, 20)
            
            // –û–¥–∏–Ω–∞–∫–æ–≤—ã–π —Å—Ç–∏–ª—å –∫–Ω–æ–ø–æ–∫ —Å –≥–ª–∞–≤–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º
            VStack(spacing: 16) {
                // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
                NavigationDemoButton(
                    title: "Go Back",
                    color: .blue
                ) {
                    navigationManager.navigateBack()
                }
                
                // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
                NavigationDemoButton(
                    title: "Show Info Modal",
                    color: .green
                ) {
                    navigationManager.presentSheet(ModalScreen.info(message: "Details info for ID: \(id)"))
                }
            }
            .padding(.horizontal)
        }
        .padding()
        .navigationTitle("Details #\(id)")
    }
}

// 8Ô∏è‚É£ –≠–∫—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—è —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –∫ –∫–æ—Ä–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
struct ProfileView: View {
    @EnvironmentObject var navigationManager: NavigationManager
    let name: String
    
    var body: some View {
        VStack(spacing: 20) {
            Text("Welcome, \(name)!")
                .font(.largeTitle)
                .fontWeight(.bold)
                .padding(.bottom, 20)
            
            // –í–æ–∑–≤—Ä–∞—Ç –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É —ç–∫—Ä–∞–Ω—É
            NavigationDemoButton(
                title: "Go to Root",
                color: .red
            ) {
                navigationManager.navigateToRoot()
            }
            .padding(.horizontal)
        }
        .padding()
        .navigationTitle("Profile")
    }
}

// 9Ô∏è‚É£ –ú–æ–¥–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –∑–∞–∫—Ä—ã—Ç–∏–µ–º
struct SettingsView: View {
    @EnvironmentObject var navigationManager: NavigationManager
    
    var body: some View {
        NavigationView {
            VStack(spacing: 20) {
                Text("Settings")
                    .font(.largeTitle)
                    .fontWeight(.bold)
                    .padding(.bottom, 20)
                
                // –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                NavigationDemoButton(
                    title: "Close",
                    color: .red
                ) {
                    navigationManager.dismissSheet()
                    navigationManager.dismissFullScreenCover()
                }
                .padding(.horizontal)
            }
            .padding()
            .navigationTitle("Settings")
        }
    }
}

// üîü –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
struct InfoView: View {
    @EnvironmentObject var navigationManager: NavigationManager
    let message: String
    
    var body: some View {
        VStack(spacing: 20) {
            Text("Information")
                .font(.largeTitle)
                .fontWeight(.bold)
                .padding(.bottom, 10)
            
            // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
            Text(message)
                .font(.body)
                .padding()
                .background(Color.gray.opacity(0.1))
                .cornerRadius(8)
                .padding(.bottom, 10)
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            NavigationDemoButton(
                title: "Dismiss",
                color: .blue
            ) {
                navigationManager.dismissSheet()
            }
            .padding(.horizontal)
        }
        .padding()
    }
}
